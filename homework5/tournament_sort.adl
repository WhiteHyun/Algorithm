tournament_sort(a[], n)
    count ← 1;
    length ← n;
    b ← [];
    while (length / 2 ≠ 0) do { //할당 부분
        count ← count + 1;
        length ← length / 2;
    }
    m ← 2^(count+1);    //b 배열의 크기
    b에 2^count만큼의 크기만큼 0 값을 할당
    for (i ← 0; i < 2^count; i ← i + 1) do {
        if (i < n) then b에 a[i]의 값을 추가
        else then b에 0 값을 추가
    }
    for (i ← n-1; i ≥ 0; i ← i - 1) do {
        // 토너먼트
        for (j ← 2^count-1; j ≥ 1; j ← j - 1) do {
            child1 ← b[j * 2];
            child2 ← b[j * 2 + 1];
            if (child1 < child2) then b[j] ← child2;
            else then b[j] ← child1;
        }
        a[i] ← b[1];    // 값 추가

        // 토너먼트 우승한 값을 0으로 초기화
        j ← 1;
        while (j*2 < m) {
            if (b[j] = b[j*2]) then j ← j * 2;
            else then j ← j * 2 + 1;
        }
        b[j] ← 0;
    }
end tournament_sort()