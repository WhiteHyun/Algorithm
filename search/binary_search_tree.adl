binary_search_tree(B, search_key)
    x ← B;
    while (x ≠ null) do {
        if (x.key = search_key) then return  x.key; //탐색 성공
        if (x.key > search_key) then x ← x.left;
            // 탐색 키가 작으므로 왼쪽 서브트리 탐색
        else x ← x.right;
            // 탐색 키가 크므로 오른쪽 서브트리 탐색
    }
    return -1;  // 탐색 실패
end binary_search_tree()

insert(self, v)
    x ← self.head.right;
    p ← self.head;
    while (x ≠ null) do {
        // 삽입 키가 작으므로 왼쪽 서브트리 이동
        if (x.key > v) do {
            p ← x;
            x ← x.left;
        }
        // 삽입 키가 크므로 오른쪽 서브트리 이동
        else do {
            p ← x;
            x ← x.right;   
        }
    }
    x ← node(v);
    if (p.key > v) do {
        p.left ← x;
    }
    else do {
        p.right ← x;
    }
end insert()

